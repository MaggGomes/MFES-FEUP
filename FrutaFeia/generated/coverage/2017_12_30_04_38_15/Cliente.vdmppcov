class Cliente

types 
	public Genero = <HOMEM> | <MULHER>;
	public EncomendaStatus = <SEM_ENC> | <COM_ENC> | <ENTREGUE> | <CANCELADA> | <PRONTA>
	
instance variables
  public encomenda:Cesta;
  public estadoEnc: EncomendaStatus;
  public nome:seq1 of (char);
  public genero: Genero;

operations
  public  Cliente : seq1 of (char) * Genero ==> Cliente
  Cliente(n, gen) == (nome:= n; genero:= gen; estadoEnc := <SEM_ENC>; encomenda:= new Cesta(); return self;)
  	post nome = n and genero = gen and estadoEnc = <SEM_ENC>;
  
  public  associaCesta : Cesta ==> ()
  associaCesta(cesta) ==
    (	
    	encomenda := cesta; 
    	estadoEnc := <COM_ENC>;
    )	
    post encomenda = cesta;

  public  removeCesta : ()  ==> ()
  removeCesta() == estadoEnc := <CANCELADA>
  post estadoEnc = <CANCELADA>;
	
  public  mudaCesta : Cesta ==> ()
  mudaCesta(cesta) ==
    (encomenda := cesta; estadoEnc := <COM_ENC>)
    post encomenda = cesta and encomenda <> encomenda~ and estadoEnc = <COM_ENC>;

	public encomendaPronta: () ==> () 
	encomendaPronta() == estadoEnc := <PRONTA>
	pre estadoEnc = <COM_ENC>
	post estadoEnc = <PRONTA>;

	public levantaCesta: () ==> () 
	levantaCesta() == estadoEnc := <ENTREGUE>
	pre estadoEnc = <PRONTA> 
	post estadoEnc = <ENTREGUE>;
		
end Cliente
