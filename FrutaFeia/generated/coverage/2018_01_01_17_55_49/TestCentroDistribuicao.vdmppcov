class TestCentroDistribuicao is subclass of TestFrutaFeia

operations
  public testConstructor() == (
    dcl centro: CentroDistribuicao := new CentroDistribuicao("Porto");
    IO`println("\t\t Testing Constructor");
    assertEqual("Porto", centro.localizacao);
  );
	
	public testManageCenter()  == (
		 dcl centro: CentroDistribuicao := new CentroDistribuicao("Porto");
		 dcl encomenda: Encomenda := new Encomenda();
		 dcl encomenda2: Encomenda := new Encomenda();
		 dcl produto: Produto := new Produto("Maca" ,"Golden", 5);
		 dcl produto2: Produto := new Produto("Maracuja","Rose", 1);
		 
		 IO`println("\t\t Testing Adciona Encomenda");
		 assertEqual(0, card centro.encomendas);
		
		 encomenda.adicionaProduto(produto);
		 
		 centro.adicionaEncomenda(encomenda);
		 centro.adicionaEncomenda(encomenda2);
		 assertEqual(2, card centro.encomendas);
		
		 centro.removeEncomenda(encomenda.id);
		 assertEqual(1, card centro.encomendas);
		 
		 centro.adicionaEncomenda(encomenda);
		 
		 
		 assertEqual(1, card encomenda.produto);
		 
		 assertTrue(centro.adicionaProdutoEncomenda(encomenda.id, produto2));
		 
		 assertEqual(2, card centro.encomendas);
		 assertEqual(2, card encomenda.produto);
		 
		 assertTrue(centro.removeProdutoEncomenda(encomenda.id, produto2));
		 assertEqual(1, card encomenda.produto);
		 
		 assertTrue(centro.adicionaPesoProdutoEncomenda(encomenda.id, produto.nome, 1));
		 assertEqual(6, produto.peso);
		 
		 assertTrue(centro.removePesoProdutoEncomenda(encomenda.id, produto.nome, 1));
		 assertEqual(5, produto.peso);
		 
		 
);
	
  public testAll() == (
    IO`println("\t Testing CentroDistribuicao class");
    testConstructor();
    testManageCenter();
  );
end TestCentroDistribuicao