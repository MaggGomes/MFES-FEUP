class Encomenda

  


types 
	public NomeProduto = Produto`NomeProduto;
	public PesoProduto = Produto`Peso;
	public Id = int;
	

instance variables
	static public GLOBAL_ID: Id := 0;
  public vende :set of (Agricultor);
  public produto:set of (Produto);
  public id: Id;

operations
  public  Encomenda : ()  ==> Encomenda
  Encomenda() == (vende := {}; produto := {}; id := GLOBAL_ID; GLOBAL_ID := GLOBAL_ID + 1;  return self;)
  post vende = {} and produto = {} and GLOBAL_ID = GLOBAL_ID~ + 1 and id = GLOBAL_ID~;
   
  public  adicionaProduto : Produto ==> ()
  adicionaProduto(prod) ==  produto := {prod} union produto
  post produto = {prod} union produto~; 
  
  public  removeProduto : Produto ==> ()
  removeProduto(prod) == produto := produto \ {prod}
  post produto inter {prod} = {};

  public  adicionaPesoProduto : NomeProduto * PesoProduto ==> bool
  adicionaPesoProduto(nomeProd, peso) ==
     (
      for all elem in set produto  
      	do 
        	if elem.nome = nomeProd 
            then ( elem.adicionaPeso(peso); return true);
     	return false
     )
    pre  peso >= 0; 

  public  removePesoProduto : NomeProduto * PesoProduto ==> bool
  removePesoProduto(nomeProd, peso) == 
  		(
  			for all elem in set produto
  				do
  					if elem.nome = nomeProd
  						then (elem.removePeso(peso); return true);
  			return false;
  		)	
   	pre  peso >= 0;


end Encomenda
