class Encomenda

types 
	public Id = int;	

instance variables
	static public GLOBAL_ID: Id := 0;
  public agricultores :set of (Agricultor);
  public produtos:set of (Produto);
  public id: Id;

operations
  public  Encomenda : ()  ==> Encomenda
  Encomenda() == (agricultores:= {}; produtos := {}; id := GLOBAL_ID; GLOBAL_ID := GLOBAL_ID + 1;  return self;)
  post agricultores = {} and produtos = {} and GLOBAL_ID = GLOBAL_ID~ + 1 and id = GLOBAL_ID~;
   
  public  adicionaProduto : Produto ==> ()
  adicionaProduto(produto) ==  produtos := {produto} union produtos
  pre produto <> undefined and produto not in set produtos
  post produtos = {produto} union produtos~; 
  
  public  removeProduto : Produto ==> ()
  removeProduto(produto) == produtos := produtos \ {produto}
  pre produto <> undefined and produto in set produtos
  post produtos inter {produto} = {};

  public  adicionaPesoProduto : Produto`NomeProduto * Produto`Peso ==> bool
  adicionaPesoProduto(nomeProduto, peso) ==
     (
      for all elem in set produtos  
      	do 
        	if elem.nome = nomeProduto 
            then ( elem.adicionaPeso(peso); return true);
     	return false
     )
   pre len nomeProduto > 0 and peso > 0; 

  public  removePesoProduto : Produto`NomeProduto * Produto`Peso ==> bool
  removePesoProduto(nomeProduto, peso) == 
  		(
  			for all elem in set produtos
  				do
  					if elem.nome = nomeProduto
  						then (elem.removePeso(peso); return true);
  			return false;
  		)	
   pre  len nomeProduto > 0 and peso > 0;

end Encomenda
